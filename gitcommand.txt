git config --global --list  查看当前配置信息


git clone [url] [branch] 克隆某个分支
ssh-keygen -t rsa -C "email"  生成本地ssh key

cat ~/.ssh/id_rsa.pub  查看本地ssh key

git branch 查看本地分支
git branch --set-upstream-to=origin/[远程分支名] [当前分支]

git branch -a 查看远程分支
git branch [分支名]        创建分支(一般与远程仓库分支名相同)
git branch -D [分支名]   删除分支
git branch -M  [旧分支] [新分支]

git rm 修改.gitigonore文件的缓存(没用过)

git diff  比较工作区和缓存区差异
git diff  [分支1] [分支2] 比较两个分支之间的差异


git checkout [分支名]    切换分支
git checkout -b [分支名]    创建分支branch并切换

git status  查看工作区文件


git add [文件名]   提交到缓存
git add .  所有修改全部提交到缓存
git add ./test   将test文件夹下修改的内容提交到缓存

git restore --staged [文件名] 将该文件取消缓存
git restore --staged .    将所有文件取消缓存

git commit -m "需要描述的信息" 提交到分支

git log 查看日志
git log --all --graph

git push  将当前分支推送到远程分支(分支名要相同)

git push --set-upstream origin branch1      与远程仓库的分支建立连接

git pull  （拉取分支与当前分支名相同)

git pull [url] branch1  拉去合并某个分支branch1



git rebase [分支名]   本地某分支合并到当前分支
git merge [分支名]
